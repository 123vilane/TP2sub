# -*- coding: utf-8 -*-
"""TP2Sub

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ALDF4yu-oESfBtfSchcAkbbm5u-eRdLZ

22329057 MT Vilane

Dataset link: https://www.kaggle.com/datasets/tfisthis/global-ai-tool-adoption-across-industries?utm_source=chatgpt.com
"""

#installing prophet
!pip uninstall -y prophet
!pip install prophet --quiet

!pip install prophet --quiet

#importing dependencies
import pandas as pd
import numpy as np
import streamlit as st
import matplotlib.pyplot as plt
import seaborn as sns
from prophet import Prophet
from prophet.diagnostics import cross_validation, performance_metrics

"""Dataset link: https://www.kaggle.com/datasets/tfisthis/global-ai-tool-adoption-across-industries?utm_source=chatgpt.com"""

#loading dataset and viewing the first 5 colums
df = pd.read_csv('/content/drive/MyDrive/ai_adoption_dataset.csv')
df.head()

#checking datatypes and missing valuses
df.info()
df.isnull().sum()

#summery statistics
df.describe()

df.dtypes

# Remove commas and convert adoption_rate to numeric
df['adoption_rate'] = df['adoption_rate'].astype(str).str.replace(',', '.').astype(float)

# Aggregate average adoption rate per industry per year
industry_trends = df.groupby(['industry', 'year'])['adoption_rate'].mean().reset_index()

# Rename columns for Prophet
industry_trends.rename(columns={'year':'ds', 'adoption_rate':'y'}, inplace=True)

# Convert 'ds' to datetime (Prophet requires datetime)
industry_trends['ds'] = pd.to_datetime(industry_trends['ds'], format='%Y')
industry_trends.head()

# Filter data for Education industry
tech_data = industry_trends[industry_trends['industry']=='Education'][['ds','y']]

# Initialize Prophet model yearly since data is annual
model = Prophet(yearly_seasonality=True)

# Fit the model
model.fit(tech_data)

# Create future dataframe (next 5 years)
future = model.make_future_dataframe(periods=5, freq='Y')

# Predict
forecast = model.predict(future)

# Show forecast
model.plot(forecast)
plt.show()

# Plot forecast
model.plot(forecast)
plt.title("AI Adoption Forecast for Education Industry")
plt.show()

# Plot trend components (yearly)
model.plot_components(forecast)
plt.show()

industries = industry_trends['industry'].unique()

for industry in industries:
    data_i = industry_trends[industry_trends['industry']==industry][['ds','y']]
    model_i = Prophet(yearly_seasonality=True)
    model_i.fit(data_i)
    future_i = model_i.make_future_dataframe(periods=5, freq='Y')
    forecast_i = model_i.predict(future_i)

    print(f"Forecast for {industry}")
    model_i.plot(forecast_i)
    plt.show()

import matplotlib.pyplot as plt

# Histogram of AI adoption rates for Education industry
tech_data['y'].hist(bins=5)
plt.title("Distribution of AI Adoption Rates - Technology")
plt.xlabel("Adoption Rate (%)")
plt.ylabel("Frequency")
plt.show()

# Bar plot of adoption rates per industry per year
sns.barplot(x='ds', y='y', data=industry_trends[industry_trends['industry']=='Technology'])
plt.title("AI Adoption per Year - Technology")
plt.xlabel("Year")
plt.ylabel("Adoption Rate (%)")
plt.show()

# Sum adoption rate per industry
industry_sum = industry_trends.groupby('industry')['y'].sum()

plt.figure(figsize=(6,6))
plt.pie(industry_sum, labels=industry_sum.index, autopct='%1.1f%%', startangle=140)
plt.title("Proportion of AI Adoption Across Industries")
plt.show()

fig, ax = plt.subplots(2, 1, figsize=(10,8))

# Line plot for forecast trend
ax[0].plot(forecast['ds'], forecast['yhat'], color='blue')
ax[0].fill_between(forecast['ds'], forecast['yhat_lower'], forecast['yhat_upper'], color='blue', alpha=0.2)
ax[0].set_title("Forecasted AI Adoption - Technology")
ax[0].set_ylabel("Adoption Rate (%)")

# Histogram of actual adoption rates
ax[1].hist(tech_data['y'], bins=5, color='green', alpha=0.7)
ax[1].set_title("Distribution of AI Adoption Rates - Technology")
ax[1].set_xlabel("Adoption Rate (%)")
ax[1].set_ylabel("Frequency")

plt.tight_layout()
plt.show()

!pip install -q streamlit prophet pyngrok pandas matplotlib seaborn



from google.colab import drive
drive.mount('/content/drive')

!cp "/content/drive/MyDrive/ai_adoption_dataset.csv" /content/

# Commented out IPython magic to ensure Python compatibility.
# %%bash
# cat > /content/app.py <<'PY'
# # --- your Streamlit app code here ---
# import streamlit as st
# import pandas as pd
# import matplotlib.pyplot as plt
# from prophet import Prophet
# import numpy as np
# 
# st.title("AI Adoption Forecast Dashboard")
# 
# df = pd.read_csv("/content/drive/MyDrive/ai_adoption_dataset.csv")
# df['adoption_rate'] = df['adoption_rate'].astype(str).str.replace(',', '.').astype(float)
# df['year'] = pd.to_datetime(df['year'], format='%Y')
# 
# industry = st.selectbox("Select industry:", df['industry'].unique())
# subset = df[df['industry'] == industry][['year', 'adoption_rate']].rename(columns={'year':'ds','adoption_rate':'y'}).sort_values('ds')
# 
# model = Prophet(yearly_seasonality=True)
# model.fit(subset)
# future = model.make_future_dataframe(periods=12, freq='M')
# forecast = model.predict(future)
# 
# fig, ax = plt.subplots(figsize=(8,4))
# ax.plot(subset['ds'], subset['y'], label='Historical')
# ax.plot(forecast['ds'], forecast['yhat'], label='Forecast')
# ax.fill_between(forecast['ds'], forecast['yhat_lower'], forecast['yhat_upper'], alpha=0.2)
# st.pyplot(fig)
# 
# st.write("12-month forecast complete.")
# PY
#

from pyngrok import ngrok, conf
import subprocess, time

conf.get_default().auth_token = "34pVrSOP3HV5s7uZqabZczO4qrG_B1mxNbCJTCocCeyRKQy3"

# start Streamlit app
cmd = "streamlit run /content/app.py --server.port 8501 --server.headless true"
process = subprocess.Popen(cmd.split())

time.sleep(5)  # give Streamlit a few seconds to start
public_url = ngrok.connect(8501)
print("ðŸ”— Public URL:", public_url)